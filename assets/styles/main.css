/* переменные */

:root {
  --color-white: #f6f1e8;
  --color-black: #030303;
  --color-blackgrey: #0d0d0d;
  --color-deepgrey: #1E1E1E;
  --color-mediumgrey: #2C2C2C;
  --color-regulargrey: #606060;
  --color-lightgrey: #A9A9A9;
  --color-green: #2EFF5C;
  --color-yellow: #FFD12E;
  --color-blue: #2E81FF;
  --color-violet: #EE2EFF;
  --color-pink: #FF2E9F;
  --color-red: #FF2E2E;
  --color-orange: #FF792E;
  --font-size: 14px;
  --m-font-size: calc(var(--font-size) * 2.4);
  --line-height: 16px;
  --m-line-height: calc(var(--line-height) * 2.4);
  --text-transform: lowercase;
  --gap-8: 8px;
  --padding: 8px;
  --radius-4: 4px;
  --radius-16: 16px;
  --radius-80: 80px;
  --opacity-20: 0.2;
  --opacity-40: 0.4;
  --opacity-60: 0.6;
  --opacity-80: 0.8;
  --opacity-100: 1.0;
  --portfolio-width: 80px;
  --animation-duration: 400ms;
  --animation-cubic: cubic-bezier(0.8, 0, 0.2, 1);
  
  /* Переменные для курсоров - изолируем от JS */
  --cursor-default: crosshair;
  --cursor-clickable: pointer;
}


/* основные стили */

/* Радикально простой подход - только базовые элементы */
html, body {
  cursor: crosshair !important;
}

body {
  display: block;
  margin: auto;
  font-optical-sizing: auto;
  z-index: 100;
  background-color: var(--color-white);
}

/* Все элементы наследуют crosshair, кроме ссылок */
* {
  cursor: inherit !important;
}

body::-webkit-scrollbar {
    display: none;
}

::selection {
background: var(--color-green);
color: var(--color-black);
}


h1, h2, p, a {
  font-family: "Arial", sans-serif;
  font-weight: 400;
  letter-spacing: -0.02em;
  font-size: var(--font-size);
  line-height: var(--line-height);
  text-transform: var(--text-transform);
  color: var(--color-white);
  text-decoration: none;
  padding: 0;
  margin: 0;
  position: relative;
}

/* Ссылки всегда pointer - максимальная специфичность */
a {
  cursor: pointer !important;
}

button, input[type="submit"], input[type="button"], .clickable {
  cursor: pointer !important;
}

/* Дополнительная защита для всех состояний ссылок */
a:link, a:visited, a:hover, a:active, a:focus, a:any-link {
  cursor: pointer !important;
}

.bg-green {
  background-color: var(--color-green);
  color: var(--color-black);
}

.bg-yellow {
  background-color: var(--color-yellow);
  color: var(--color-black);
}

.bg-blue {
  background-color: var(--color-blue);
  color: var(--color-black);
}

.bg-violet {
  background-color: var(--color-violet);
  color: var(--color-black);
}

.bg-pink {
  background-color: var(--color-pink);
  color: var(--color-black);
}

.bg-red {
  background-color: var(--color-red);
  color: var(--color-black);
}

.bg-orange {
  background-color: var(--color-orange);
  color: var(--color-black);
}


/* Сохраняем цветовые эффекты ссылок при наведении */
a.blend-invert:hover::after {
  opacity: 0;
}

a:hover {
  transition: var(--animation-duration) var(--animation-cubic);
}

.block {
  width: 100vw;
  max-width: 100vw;
  margin: auto;
}

.links {
  display: flex;
  gap: var(--gap-8);
  margin-top: 40vh;
  position: sticky;
  top: var(--padding);
  width: 100%;
  justify-content: space-between;
  z-index: 9999;
  pointer-events: auto;
}

.links a {
  pointer-events: auto !important;
  position: relative;
  z-index: 10000;
}

/* Принудительно убираем pointer-events: none со всех элементов которые могут блокировать ссылки */
body * {
  pointer-events: auto;
}

/* Исключения для элементов которые должны быть неинтерактивными */
.noise, svg[style*="pointer-events: none"] {
  pointer-events: none !important;
}

.links-page {
    display: flex;
    gap: var(--gap-8);
    margin-top: var(--gap-8);
    position: sticky;
    bottom: calc(var(--padding) * 2);
    top: var(--padding);
    width: 100%;
    justify-content: space-between;
    z-index: 101;
  }

.contacts {
  display: flex;
  gap: var(--gap-8);
  z-index: 105;
}

.padding-left {
  padding-left: var(--padding);
}

.padding-right {
  padding-right: var(--padding);
}

.portfolio {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--gap-8) / 4);
  margin-top: 10vh;
  position: sticky;
  top: calc(var(--padding) * 4);
  padding-left: var(--padding);
  padding-right: var(--padding);
}

.navigation {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--gap-8);
  position: sticky;
  top: calc(var(--padding) * 4);
  z-index: 102;
}

.case {
  width: auto;
  max-height: var(--portfolio-width);
  min-height: var(--portfolio-width);
  object-fit: cover;
  border-radius: var(--radius-4);
  transition: var(--animation-duration) var(--animation-cubic);
}

.note {
  position: relative;
  top: 300px;
  left: 0;
}


/* Убираем CSS hover для параграфов - будем использовать JS */

.pages {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--gap-8) / 16);
  transition: var(--animation-duration) var(--animation-cubic);
  z-index: 102;
}

.pages:hover {
  transform: translateY(8px);
  transition: var(--animation-duration) var(--animation-cubic);
}

.pages-left:hover {
  transform: translateX(-8px) skewX(10deg);
  transition: var(--animation-duration) var(--animation-cubic);
}

.pages-right:hover {
  transform: translateX(8px) skewX(-10deg);
  transition: var(--animation-duration) var(--animation-cubic);
}


.design {
  padding-right: var(--padding);
}

.film {
  padding-left: var(--padding);
}

.photo {
  width: auto;
  max-height: 80px;
  min-height: 80px;
  object-fit: cover;
  border-radius: var(--radius-80);
  transition: var(--animation-duration) var(--animation-cubic);
}

.photo:hover {
  max-height: calc(var(--portfolio-width) * 2);
  transition: var(--animation-duration) var(--animation-cubic);
  color: var(--color-green);
  border-radius: var(--radius-80);
  transition-delay: calc(var(--animation-duration) / 2);
  transform: skewX(10deg);
}

.content {
  margin-top: 24vh;
  padding: var(--padding);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--gap-8)*20);
  margin-bottom: 20vh;
}

.content p {
  text-align: center;
}

.about {
  width: 20vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--gap-8)*20);
  z-index: 103;
}

.about p:not(:last-child), .about img {
  position: sticky;
  top: calc(var(--padding) * 28);
  text-align: center;
  z-index: 50;
}

.projects {
  width: 80vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--gap-8)*20);
  z-index: 100;
}

.texts {
  width: 20vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--gap-8)*20);
  z-index: 100;
}

.texts p {
  margin-bottom: calc(var(--gap-8) * 2);
}

.project {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  gap: calc(var(--gap-8)/4);
}

.project p {
  margin-bottom: calc(var(--gap-8) * 2);
  margin-top: calc(var(--gap-8) * 2);
  width: 20vw;
}

.fragment {
  width: 20vw;
}

.info {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--gap-8) / 2);
  flex-direction: column;
  position: sticky;
  top: calc(var(--padding)*11);
  z-index: 106;
}

.info-page {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: calc(var(--gap-8) / 2);
    flex-direction: column;
}

*:focus {
  outline: none;
}

video {
  width: 100%;
  border-radius: var(--radius-4);
}

img {
  width: 100%;
  border-radius: var(--radius-4);
}

.svg {
  width: auto !important;
  height: auto !important;
  border-radius: var(--radius-4);
}

.error {
  margin: auto;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

:root {
  font-family: Inter, sans-serif;
  font-feature-settings: 'liga' 1, 'calt' 1; /* fix for Chrome */
}

/* Адаптивность для мобильных устройств */
@media (max-width: 1000px) {
  h1, h2, p, a {
    font-size : var(--m-font-size); 
    line-height : var(--m-line-height);     
  }

  .none {
    display: none;
  }
  
  .about {
    width: 60vw;
  }

  .texts {
    width: 60vw;
  }

  .projects {
    width: 94vw;
  }

  .project {
    width: 94vw;
  }

  .project p {
    width: 60vw;
  }

  .texts p {
    width: 60vw;
  }

  .portfolio {
    top: calc(var(--padding) * 8);
  }

  .info {
    top: calc(var(--padding) * 20);
  }

  .about p:not(:last-child), .about img {
    top: calc(var(--padding) * 48);
  }
}
